name: Big Ruleset
rules:
  - scope: output
    category: Negative
    instruction: |
      nodes = command_util.get_every_node_of_instruction("WORKDIR")
      for node in nodes:
        p = command_util.get_node_property_string(node, "Path")
        assert(p.startswith("/") or p.startswith("$"))
    description: Use absolute workdir
    id: DL3000 
    target: command

  - scope: output
    category: Negative
    instruction: |
      assert(not command_util.uses_command("sudo"))
    description: No sudo
    id: DL3004
    target: command

  - scope: output
    category: Negative
    instruction: |
      assert(len(command_util.get_every_node_of_instruction("HEALTHCHECK")) <= 1)
    id: DL3012
    target: command

  - scope: output
    category: Negative
    instruction: |
        seen = set()
        ast_depth = command_util.get_ast_depth()
        for i in range(ast_depth):
          stage_node = command_util.get_stage_node_at(i)
          stage_name = command_util.get_stage_name(stage_node)
          # Emtpy is allowed
          if len(stage_name) == 0:
            continue
          assert(stage_name not in seen)
          seen.add(stage_name)
    id: DL3024
    target: command
    description: stage names must be unique

  - scope: output
    category: Negative
    instruction: |
      nodes = command_util.get_every_node_of_instruction("MAINTAINER")
      assert(len(nodes) == 0)
    id: DL4000
    target: command
    description: No MAINTAINER due to deprecation

  - scope: output
    category: Negative
    instruction: |
      nodes = command_util.get_every_node_of_instruction("ENTRYPOINT")
      assert(len(nodes) <= 1)
    id: DL4004
    target: command
    description: Only one entrypoint


#DL3011                   & Valid UNIX ports range from 0 to 65535. & Placeholder \\
#DL3020                   & Use `COPY` instead of `ADD` for files and folders. & Placeholder \\
#DL3021                   & `COPY` with more than 2 arguments requires the last argument to end with `/`. & Placeholder \\
#DL3023                   & `COPY --from` cannot reference its own `FROM` alias. & Placeholder \\
#DL3043                   & `ONBUILD`, `FROM` or `MAINTAINER` triggered from within `ONBUILD` instruction. & Placeholder \\
#DL3044                   & Do not refer to an environment variable within the same `ENV` statement where it is defined. & Placeholder \\
#DL3061                   & Invalid instruction order. Dockerfile must begin with `FROM`, `ARG` or comment. & Placeholder \\

